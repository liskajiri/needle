[project]
authors = ["Jiří Liška <70215056+liskajiri@users.noreply.github.com>"]
channels = ["https://fast.prefix.dev/conda-forge"]
description = "Library for deep learning & neural networks"
name = "needle"
platforms = ["linux-64"] #, "win-64"]
version = "0.1.0"

[tasks]
clean = "rm -rf .build/ cmake-build-debug/ python/needle/backend_ndarray/ndarray_backend*.so reports/ .pytest_cache/ .coverage"

# TODO: gpu test/bench environment
[environments]
jupyter = ["jupyter"]
lint = {features = ["lint"], no-default-feature = true}
dev = ["dev"]
test = ["test"]
benchmark = ["benchmark"]

[dependencies]
numpy = ">=2.2.1,<3"
python = ">=3.12.8,<3.13"

[feature.jupyter.dependencies]
jupyter = ">=1.1.1,<2"
ipykernel = ">=6.29.5,<7"

[feature.lint.dependencies]
ruff = ">=0.9.1,<0.10"
pre-commit = ">=4.0.1,<5"
pre-commit-hooks = ">=5.0.0,<6"
clang-format = ">=19.1.7,<20"

[feature.lint.tasks]
format = "clang-format -i -style='{IndentWidth: 4}' backends/cpu/*.cc backends/*.cu"
lint = "pre-commit run --all-files --color=always --show-diff-on-failure"
style = { depends-on = ["format", "lint"] }

[feature.dev.dependencies]
cmake = ">=3.31.4,<4"
ninja = ">=1.12.1,<2"
nanobind = ">=2.4.0,<3"
clang = ">=19.1.7,<20"
llvm-openmp = ">=19.1.7,<20"
clangxx = ">=19.1.7,<20"
libcxx = ">=19.1.7,<20"
libcxx-devel = ">=19.1.7,<20"
libcxxabi = ">=19.1.7,<20"

[feature.dev.tasks]
make = { cmd = "cmake -G Ninja -S . -B .build"}
build = { cmd = ["ninja", "-C", ".build"], depends-on = ["make"] }

[feature.test.dependencies]
numdifftools = ">=0.9.41,<0.10"
pytest = ">=8.3.4,<9"
pytest-sugar = ">=1.0.0,<2"
pytest-cov = ">=6.0.0,<7"
pytest-xdist = ">=3.6.1,<4"
pytest-html = ">=4.1.1,<5"
hypothesis = ">=6.124.0,<7"
pytest-randomly = ">=3.15.0,<4"

[feature.test.tasks]
# Save results of test to html, run code coverage
test = {cmd = "python -m pytest tests/ -n auto --html=reports/test_report.html --cov-report html:reports/coverage --cov=python/needle/ tests/ -m 'not slow'", depends-on = ["build"]}
# Fails tests if code coverage is below 80%
test_all = {cmd = "python -m pytest tests/ -n auto --html=reports/test_report.html --cov-report html:reports/coverage --cov=python/needle/ tests/ --cov-fail-under=80", depends-on = ["build"]}

[feature.benchmark.dependencies]
# TODO: remove when Codspeed is ready
pytest = ">=8.3.4,<9"
pytest-benchmark = ">=5.1.0,<6"
# scalene = ">=1.5.41,<2"
# pytest-codspeed = ">=3.1.0,<4"
pygal = ">=3.0.5,<4"
# py-spy = ">=0.4.0,<0.5"

[feature.benchmark.tasks]
# TODO: Add --codspeed when Codspeed is ready
matmul_correct = {cmd = "python -m pytest benchmarks/ -k 'test_correct' -s", depends-on = ["build"]}
matmul_benchmark = {cmd = "python -m pytest benchmarks/ -k 'test_matmul and not large' -s  --benchmark-sort=mean --benchmark-autosave --benchmark-save-data --benchmark-histogram='reports/matmul_benchmark'", depends-on = ["build"]}
large_matmul_benchmark = {cmd = "python -m pytest benchmarks/ -k 'test_matmul_large' -s --benchmark-sort=mean --benchmark-autosave --benchmark-save-data --benchmark-histogram='reports/matmul_large'", depends-on = ["build"]}
bench_matmul = "py-spy record -o profile.svg -- python reports/test_matmul_benchmarks.py"

[activation]
env = {PYTHONPATH = "./python:./apps"}
